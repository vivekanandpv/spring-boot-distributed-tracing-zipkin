spring.application.name=upstream-service
app.downstream.url=http://localhost:9090

server.port=9091

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Zipkin
management.tracing.sampling.probability=1.0
management.tracing.propagation.type=B3

# In distributed tracing, propagation is how the trace context (like trace ID, span ID) 
# travels across services, typically via HTTP headers.
# B3 (originally from Twitter, now supported widely including Zipkin, Brave, Spring Cloud Sleuth) 
# is a trace context propagation standard.

# Tracing is costly
# It adds latency (albeit small)
# It increases network traffic (especially across services)
# It bloats your backend (Zipkin, Jaeger) ? think thousands of spans per second
# Just enough representative traces to diagnose patterns, detect outliers, and reconstruct distributed flow

# For dev/testing 1.0
# For most prod systems 0.1 (10%) or even 0.01 (1%) is often more than enough



